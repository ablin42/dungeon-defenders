/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { GemsFaucet, GemsFaucetInterface } from "../GemsFaucet";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_gemsToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "DRIP_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "gemsBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "gemsToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052681b1ae4d6e2ef50000060025534801561001d57600080fd5b5060405161088438038061088483398101604081905261003c916100c5565b61004c610047610071565b610075565b600180546001600160a01b0319166001600160a01b03929092169190911790556100f3565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100d6578081fd5b81516001600160a01b03811681146100ec578182fd5b9392505050565b610782806101026000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063b6b55f2511610066578063b6b55f25146100d0578063ba663954146100e3578063db724cef146100eb578063e98890a71461010b578063f2fde38b1461011357610093565b80633ccfd60b146100985780634e71d92d146100a2578063715018a6146100aa5780638da5cb5b146100b2575b600080fd5b6100a0610126565b005b6100a0610208565b6100a06102cc565b6100ba6102e0565b6040516100c79190610640565b60405180910390f35b6100a06100de366004610610565b6102ef565b6100ba610459565b6100fe6100f93660046105c2565b610468565b6040516100c79190610743565b6100fe6104ef565b6100a06101213660046105c2565b6104f5565b61012e61052f565b60006101386102e0565b9050600061014530610468565b60015460405163a9059cbb60e01b81529192506001600160a01b03169063a9059cbb906101789085908590600401610678565b602060405180830381600087803b15801561019257600080fd5b505af11580156101a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ca91906105f0565b507f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a942436482826040516101fc929190610678565b60405180910390a15050565b60015460025460405163a9059cbb60e01b81526001600160a01b039092169163a9059cbb9161023c91339190600401610678565b602060405180830381600087803b15801561025657600080fd5b505af115801561026a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028e91906105f0565b507f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4336002546040516102c2929190610678565b60405180910390a1565b6102d461052f565b6102de600061056e565b565b6000546001600160a01b031690565b6001546040516370a0823160e01b815282916001600160a01b0316906370a082319061031f903390600401610640565b60206040518083038186803b15801561033757600080fd5b505afa15801561034b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061036f9190610628565b10156103965760405162461bcd60e51b815260040161038d9061070c565b60405180910390fd5b6001546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906103ca90339030908690600401610654565b602060405180830381600087803b1580156103e457600080fd5b505af11580156103f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041c91906105f0565b507fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c338260405161044e929190610678565b60405180910390a150565b6001546001600160a01b031681565b6001546040516370a0823160e01b81526000916001600160a01b0316906370a0823190610499908590600401610640565b60206040518083038186803b1580156104b157600080fd5b505afa1580156104c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104e99190610628565b92915050565b60025481565b6104fd61052f565b6001600160a01b0381166105235760405162461bcd60e51b815260040161038d90610691565b61052c8161056e565b50565b6105376105be565b6001600160a01b03166105486102e0565b6001600160a01b0316146102de5760405162461bcd60e51b815260040161038d906106d7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b3390565b6000602082840312156105d3578081fd5b81356001600160a01b03811681146105e9578182fd5b9392505050565b600060208284031215610601578081fd5b815180151581146105e9578182fd5b600060208284031215610621578081fd5b5035919050565b600060208284031215610639578081fd5b5051919050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601b908201527f496e73756666696369656e7420616d6f756e74206f662067656d730000000000604082015260600190565b9081526020019056fea2646970667358221220a01c39f68712d686b2cc238ff4c497a73cdf0b8b2aff4da60a949451cc8dc9b764736f6c63430008010033";

export class GemsFaucet__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _gemsToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<GemsFaucet> {
    return super.deploy(_gemsToken, overrides || {}) as Promise<GemsFaucet>;
  }
  getDeployTransaction(
    _gemsToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_gemsToken, overrides || {});
  }
  attach(address: string): GemsFaucet {
    return super.attach(address) as GemsFaucet;
  }
  connect(signer: Signer): GemsFaucet__factory {
    return super.connect(signer) as GemsFaucet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GemsFaucetInterface {
    return new utils.Interface(_abi) as GemsFaucetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GemsFaucet {
    return new Contract(address, _abi, signerOrProvider) as GemsFaucet;
  }
}
