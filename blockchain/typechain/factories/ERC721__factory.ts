/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC721, ERC721Interface } from "../ERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001440380380620014408339810160408190526200003491620001c1565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b5050506200027b565b828054620000769062000228565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200011f578081fd5b81516001600160401b03808211156200013c576200013c62000265565b604051601f8301601f19908116603f0116810190828211818310171562000167576200016762000265565b8160405283815260209250868385880101111562000183578485fd5b8491505b83821015620001a6578582018301518183018401529082019062000187565b83821115620001b757848385830101525b9695505050505050565b60008060408385031215620001d4578182fd5b82516001600160401b0380821115620001eb578384fd5b620001f9868387016200010e565b935060208501519150808211156200020f578283fd5b506200021e858286016200010e565b9150509250929050565b6002810460018216806200023d57607f821691505b602082108114156200025f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6111b5806200028b6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb465146101a8578063b88d4fde146101bb578063c87b56dd146101ce578063e985e9c5146101e1576100cf565b80636352211e1461016d57806370a082311461018057806395d89b41146101a0576100cf565b806301ffc9a7146100d457806306fdde03146100fd578063081812fc14610112578063095ea7b31461013257806323b872dd1461014757806342842e0e1461015a575b600080fd5b6100e76100e2366004610d4c565b6101f4565b6040516100f49190610e48565b60405180910390f35b61010561023c565b6040516100f49190610e53565b610125610120366004610d84565b6102ce565b6040516100f49190610df7565b610145610140366004610d23565b6102f5565b005b610145610155366004610bd9565b610396565b610145610168366004610bd9565b6103ce565b61012561017b366004610d84565b6103e9565b61019361018e366004610b8d565b61041d565b6040516100f491906110e3565b610105610461565b6101456101b6366004610ce9565b610470565b6101456101c9366004610c14565b610486565b6101056101dc366004610d84565b6104c5565b6100e76101ef366004610ba7565b61052c565b60006001600160e01b031982166380ac58cd60e01b148061022557506001600160e01b03198216635b5e139f60e01b145b8061023457506102348261055a565b90505b919050565b60606000805461024b90611118565b80601f016020809104026020016040519081016040528092919081815260200182805461027790611118565b80156102c45780601f10610299576101008083540402835291602001916102c4565b820191906000526020600020905b8154815290600101906020018083116102a757829003601f168201915b5050505050905090565b60006102d982610573565b506000908152600460205260409020546001600160a01b031690565b6000610300826103e9565b9050806001600160a01b0316836001600160a01b0316141561033d5760405162461bcd60e51b815260040161033490611045565b60405180910390fd5b806001600160a01b031661034f61059b565b6001600160a01b0316148061036b575061036b816101ef61059b565b6103875760405162461bcd60e51b815260040161033490611086565b610391838361059f565b505050565b6103a76103a161059b565b8261060d565b6103c35760405162461bcd60e51b815260040161033490610e66565b61039183838361066c565b61039183838360405180602001604052806000815250610486565b6000806103f5836107a9565b90506001600160a01b0381166102345760405162461bcd60e51b81526004016103349061100e565b60006001600160a01b0382166104455760405162461bcd60e51b815260040161033490610fc5565b506001600160a01b031660009081526003602052604090205490565b60606001805461024b90611118565b61048261047b61059b565b83836107c4565b5050565b61049761049161059b565b8361060d565b6104b35760405162461bcd60e51b815260040161033490610e66565b6104bf84848484610867565b50505050565b60606104d082610573565b60006104da61089a565b905060008151116104fa5760405180602001604052806000815250610525565b80610504846108ac565b604051602001610515929190610dc8565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6001600160e01b031981166301ffc9a760e01b14919050565b61057c81610957565b6105985760405162461bcd60e51b81526004016103349061100e565b50565b3390565b600081815260046020526040902080546001600160a01b0319166001600160a01b03841690811790915581906105d4826103e9565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610619836103e9565b9050806001600160a01b0316846001600160a01b031614806106405750610640818561052c565b806106645750836001600160a01b0316610659846102ce565b6001600160a01b0316145b949350505050565b826001600160a01b031661067f826103e9565b6001600160a01b0316146106a55760405162461bcd60e51b815260040161033490610f05565b6001600160a01b0382166106cb5760405162461bcd60e51b815260040161033490610f4a565b6106d883838360016104bf565b826001600160a01b03166106eb826103e9565b6001600160a01b0316146107115760405162461bcd60e51b815260040161033490610f05565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a461039183838360016104bf565b6000908152600260205260409020546001600160a01b031690565b816001600160a01b0316836001600160a01b031614156107f65760405162461bcd60e51b815260040161033490610f8e565b6001600160a01b0383811660008181526005602090815260408083209487168084529490915290819020805460ff1916851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319061085a908590610e48565b60405180910390a3505050565b61087284848461066c565b61087e84848484610974565b6104bf5760405162461bcd60e51b815260040161033490610eb3565b60408051602081019091526000815290565b606060006108b983610a8f565b600101905060008167ffffffffffffffff8111156108e757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610911576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461094a5761094f565b61091b565b509392505050565b600080610963836107a9565b6001600160a01b0316141592915050565b6000610988846001600160a01b0316610b67565b15610a8457836001600160a01b031663150b7a026109a461059b565b8786866040518563ffffffff1660e01b81526004016109c69493929190610e0b565b602060405180830381600087803b1580156109e057600080fd5b505af1925050508015610a10575060408051601f3d908101601f19168201909252610a0d91810190610d68565b60015b610a6a573d808015610a3e576040519150601f19603f3d011682016040523d82523d6000602084013e610a43565b606091505b508051610a625760405162461bcd60e51b815260040161033490610eb3565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610664565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610ace5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610afa576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610b1857662386f26fc10000830492506010015b6305f5e1008310610b30576305f5e100830492506008015b6127108310610b4457612710830492506004015b60648310610b56576064830492506002015b600a83106102345760010192915050565b6001600160a01b03163b151590565b80356001600160a01b038116811461023757600080fd5b600060208284031215610b9e578081fd5b61052582610b76565b60008060408385031215610bb9578081fd5b610bc283610b76565b9150610bd060208401610b76565b90509250929050565b600080600060608486031215610bed578081fd5b610bf684610b76565b9250610c0460208501610b76565b9150604084013590509250925092565b60008060008060808587031215610c29578081fd5b610c3285610b76565b9350610c4060208601610b76565b925060408501359150606085013567ffffffffffffffff80821115610c63578283fd5b818701915087601f830112610c76578283fd5b813581811115610c8857610c88611153565b604051601f8201601f19908116603f01168101908382118183101715610cb057610cb0611153565b816040528281528a6020848701011115610cc8578586fd5b82602086016020830137918201602001949094529598949750929550505050565b60008060408385031215610cfb578182fd5b610d0483610b76565b915060208301358015158114610d18578182fd5b809150509250929050565b60008060408385031215610d35578182fd5b610d3e83610b76565b946020939093013593505050565b600060208284031215610d5d578081fd5b813561052581611169565b600060208284031215610d79578081fd5b815161052581611169565b600060208284031215610d95578081fd5b5035919050565b60008151808452610db48160208601602086016110ec565b601f01601f19169290920160200192915050565b60008351610dda8184602088016110ec565b835190830190610dee8183602088016110ec565b01949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610e3e90830184610d9c565b9695505050505050565b901515815260200190565b6000602082526105256020830184610d9c565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526024908201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b60208082526029908201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616040820152683634b21037bbb732b960b91b606082015260800190565b60208082526018908201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604082015260600190565b60208082526021908201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656040820152603960f91b606082015260800190565b6020808252603d908201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60408201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606082015260800190565b90815260200190565b60005b838110156111075781810151838201526020016110ef565b838111156104bf5750506000910152565b60028104600182168061112c57607f821691505b6020821081141561114d57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461059857600080fdfea2646970667358221220278fa04049c451b370d8cbac800fb217a036df27cb529c84bee298b3d0385f9764736f6c63430008010033";

export class ERC721__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC721>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  attach(address: string): ERC721 {
    return super.attach(address) as ERC721;
  }
  connect(signer: Signer): ERC721__factory {
    return super.connect(signer) as ERC721__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721Interface {
    return new utils.Interface(_abi) as ERC721Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC721 {
    return new Contract(address, _abi, signerOrProvider) as ERC721;
  }
}
