/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LootFactory, LootFactoryInterface } from "../LootFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "lootId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
    ],
    name: "NewLootGenerated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "loot",
    outputs: [
      {
        internalType: "bytes32",
        name: "name",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "minLevelRequired",
        type: "uint256",
      },
      {
        internalType: "int8",
        name: "health",
        type: "int8",
      },
      {
        internalType: "int8",
        name: "speed",
        type: "int8",
      },
      {
        internalType: "int8",
        name: "strength",
        type: "int8",
      },
      {
        internalType: "int8",
        name: "defense",
        type: "int8",
      },
      {
        internalType: "uint8",
        name: "background",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "weapon",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "armor",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "boots",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526001805466010000000000006501000000000060ff1990921660f61761ff0019166128001762ff00001916620a00001763ff000000191663030000001760ff60201b1916640d000000001760ff60281b19169190911760ff60301b191617905534801561007057600080fd5b50610189806100806000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80635739ad5514610030575b600080fd5b61004361003e3660046100e8565b610062565b6040516100599a99989796959493929190610100565b60405180910390f35b6002818154811061007257600080fd5b60009182526020822060039091020180546001820154600290920154909350909181810b916101008104820b91620100008204810b916301000000810490910b9060ff6401000000008204811691650100000000008104821691660100000000000082048116916701000000000000009004168a565b6000602082840312156100f9578081fd5b5035919050565b998a5260208a0198909852600096870b60408a015294860b606089015292850b6080880152930b60a086015260ff92831660c0860152821660e0850152811661010084015216610120820152610140019056fea2646970667358221220a57edebc90dcc5a6a1dcba729182a3b12b199009f0bdaaa59416d39229107cd964736f6c63430008010033";

export class LootFactory__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LootFactory> {
    return super.deploy(overrides || {}) as Promise<LootFactory>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LootFactory {
    return super.attach(address) as LootFactory;
  }
  connect(signer: Signer): LootFactory__factory {
    return super.connect(signer) as LootFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LootFactoryInterface {
    return new utils.Interface(_abi) as LootFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LootFactory {
    return new Contract(address, _abi, signerOrProvider) as LootFactory;
  }
}
